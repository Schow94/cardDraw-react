{"version":3,"sources":["Card.js","Deck.js","App.js","index.js"],"names":["Card","angle","Math","random","xPos","yPos","transform","concat","_this$props","this","props","name","image","react_default","a","createElement","style","className","alt","src","Component","Deck","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","deck","drawn","getCard","bind","assertThisInitialized","axios","get","setState","data","id","deck_id","cardUrl","cardRes","success","Error","card","cards","st","toConsumableArray","code","suit","value","alert","_context2","t0","map","Card_Card","key","onClick","App","Deck_Deck","ReactDOM","render","App_App","document","getElementById"],"mappings":"uUAGqBA,0LAGjB,IAAIC,EAAwB,GAAhBC,KAAKC,SAAgB,GAC7BC,EAAuB,GAAhBF,KAAKC,SAAgB,GAC5BE,EAAuB,EAAhBH,KAAKC,SAAe,GAE3BG,EAAS,aAAAC,OAAgBH,EAAhB,QAAAG,OAA2BF,EAA3B,eAAAE,OAA6CN,EAA7C,QANNO,EAQiBC,KAAKC,MAArBC,EARDH,EAQCG,KAAMC,EARPJ,EAQOI,MAEd,OACEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CAAEV,UAAWA,GACpBW,UAAU,OACVC,IAAKP,EACLQ,IAAKP,WAhBqBQ,+BCGbC,qBACnB,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAd,KAAAY,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlB,KAAMC,KACDkB,MAAQ,CAAEC,KAAM,KAAMC,MAAO,IAClCR,EAAKS,QAAUT,EAAKS,QAAQC,KAAbT,OAAAU,EAAA,EAAAV,CAAAD,IAHEA,iNAOAY,IAAMC,IAAN,GAAA5B,OAVA,uCAUA,yBAAbsB,SACJpB,KAAK2B,SAAS,CAAEP,KAAMA,EAAKQ,sQAKvBC,EAAK7B,KAAKmB,MAAMC,KAAKU,iBAGnBC,YAnBW,mDAmBkBF,qBACbJ,IAAMC,IAAIK,cAA1BC,UACSJ,KAAKK,8BAGV,IAAIC,MAAM,gCAEdC,EAAOH,EAAQJ,KAAKQ,MAAM,GAC9BpC,KAAK2B,SAAS,SAAAU,GAAE,MAAK,CACnBhB,MAAK,GAAAvB,OAAAgB,OAAAwB,EAAA,EAAAxB,CACAuB,EAAGhB,OADH,CAEH,CACEQ,GAAIM,EAAKI,KACTpC,MAAOgC,EAAKhC,MACZD,KAAI,GAAAJ,OAAKqC,EAAKK,KAAV,KAAA1C,OAAkBqC,EAAKM,+DAOjCC,MAAKC,EAAAC,iJAKP,IAAMR,EAAQpC,KAAKmB,MAAME,MAAMwB,IAAI,SAAAV,GAAI,OACrC/B,EAAAC,EAAAC,cAACwC,EAAD,CAAMC,IAAKZ,EAAKN,GAAI1B,MAAOgC,EAAKhC,MAAOD,KAAMiC,EAAKjC,SAEpD,OACEE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAd,yCACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,2DAGAJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,WAAWwC,QAAShD,KAAKsB,SAA3C,aAGAlB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB4B,WAvDNzB,cCFbsC,0LAEjB,OACE7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC4C,EAAD,cAJyBvC,oBCCjCwC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9c20b04c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Card.css';\n\nexport default class Card extends Component {\n  render() {\n    // transform: translate(10px, 20px) rotate(20deg)\n    let angle = Math.random() * 90 - 45;\n    let xPos = Math.random() * 40 - 20;\n    let yPos = Math.random() * 4 - 20;\n\n    let transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\n    // console.log(transform);\n    const { name, image } = this.props;\n\n    return (\n      <img\n        style={{ transform: transform }}\n        className=\"Card\"\n        alt={name}\n        src={image}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Card from './Card';\nimport axios from 'axios';\nimport './Deck.css';\nconst API_BASE_URL = 'https://deckofcardsapi.com/api/deck/';\n\nexport default class Deck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { deck: null, drawn: [] };\n    this.getCard = this.getCard.bind(this);\n  }\n\n  async componentDidMount() {\n    let deck = await axios.get(`${API_BASE_URL}/new/shuffle/`);\n    this.setState({ deck: deck.data });\n    // console.log(this.state.deck);\n  }\n\n  async getCard() {\n    let id = this.state.deck.deck_id;\n\n    try {\n      let cardUrl = `${API_BASE_URL}/${id}/draw/`;\n      let cardRes = await axios.get(cardUrl);\n      if (!cardRes.data.success) {\n        //creates a new err is success === false\n        //err msg shown in catch if sucess === false\n        throw new Error('No cards remaining!!!');\n      }\n      let card = cardRes.data.cards[0];\n      this.setState(st => ({\n        drawn: [\n          ...st.drawn,\n          {\n            id: card.code,\n            image: card.image,\n            name: `${card.suit} ${card.value}`\n          }\n        ]\n      }));\n      // console.log(cardRes.data.remaining);\n    } catch (err) {\n      //catch - runs if err\n      alert(err);\n    }\n  }\n\n  render() {\n    const cards = this.state.drawn.map(card => (\n      <Card key={card.id} image={card.image} name={card.name} />\n    ));\n    return (\n      <div className=\"Deck\">\n        <h1 className=\"Deck-title\">♦️ Draw a Card ♦️</h1>\n        <h2 className=\"Deck-title subtitle\">\n          ♦️ A little demo made with React ♦️\n        </h2>\n        <button className=\"Deck-btn\" onClick={this.getCard}>\n          Draw Card\n        </button>\n        <div className=\"Deck-cardarea\">{cards}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Deck from './Deck';\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Deck />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}